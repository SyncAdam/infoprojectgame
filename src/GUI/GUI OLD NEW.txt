package GUI;

import java.awt.Color;
import java.awt.GridLayout;
import java.awt.Dimension;
import java.awt.event.*;

//import java.awt.Color;

import javax.swing.*;

public class GUI {
	//création des images : 
	ImageIcon BigRed = new ImageIcon("GUI/Pictures/BigRed.png");
	ImageIcon MediumRed = new ImageIcon("GUI/Pictures/MediumRed.png");
	ImageIcon SmallRed = new ImageIcon("GUI/Pictures/SmallRed.png");
	ImageIcon BigBlue = new ImageIcon("GUI/Pictures/BigBlue.png");
	ImageIcon MediumBlue = new ImageIcon("GUI/Pictures/MediumBlue.png");
	ImageIcon SmallBlue = new ImageIcon("GUI/Pictures/SmallBlue.png");
	
	JLabel[] Big = new JLabel[9];
	JLabel[] Medium = new JLabel[9];
	JLabel[] Small = new JLabel[9];
	JLayeredPane[] LayeredPane = new JLayeredPane[9]; //creation des layeredPane qui permettent d'empiler des label
	JButton[] Button = new JButton[9];


	

	
	
	

	
	
	public GUI() {}
	int i ;
	public void create() {
		Dimension dimension = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
		int height = (int)dimension.getHeight(); // récupère la hauteur de l'écran
		
	    JFrame Home = new JFrame("Home");
		Home.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); //permet d'arreter le prog en cliquant sur la croix
		Home.setSize(height -100,height-100); // défini la taille de la fenetre à un carré de 100px de moins que la hauteur de l'écran
		Home.setResizable(false); // taille = fixe
		Home.setTitle("Otrio"); //titre du jeux
		Home.setLayout(new GridLayout(3,3));// permet de placer elements sur une grille
		Home.getContentPane().setBackground(Color.orange); // couleur du fond

		for ( i =0 ; i<9 ; i++) {
			Button[i] = new JButton();
			LayeredPane[i] = new JLayeredPane(); // création des 9 layeredPane
			
			//LayeredPane[i].setLayout(null); // sert à dire que l'on veut placer manuellement les éléements dans les layeredPane
			Big[i] = new JLabel(); // création pour chaque case des 3 labels
			Medium[i] = new JLabel();
			Small[i] = new JLabel();
			
			Big[i].setBounds(0,0,100, 100); //permet de def la position et la taille des labels dans leurs LayeredPan
			Medium[i].setBounds(0,0,100, 100);
			Small[i].setBounds(0,0,100, 100);
			Button[i].setBounds(0, 0, 100, 100); //on donne les dimmensions du bouton
			Button[i].setOpaque(false); //On rend les bouttons invisibles
			Button[i].setContentAreaFilled(false);
			Button[i].setBorderPainted(true);
			
			LayeredPane[i].add(Big[i]); //on ajoute les labels aux layeredPane
			LayeredPane[i].add(Medium[i]);
			LayeredPane[i].add(Small[i]);
			LayeredPane[i].add(Button[i], 5); // ajout du bouton à la couche 5 du LayeredPane pour qu'il soit au dessus des autres éléments
			

			
			
			

			
			Home.add(LayeredPane[i]);// on ajoute les layered pan à la fenetre
		}
		

		
		
		


		Home.setVisible(true);
	}
	int Pos ;
	public void placePawn(int Size, int PlayerId) {
		Pos=12;	
		while (Pos ==12){ 
			//ADAM, POURQUOI LA BOUCLE NE MARCHE PAS ?
			/*for (i = 0 ; i<9 ; i++){
			Button[i].addActionListener(e -> Pos = i);
			}*/ 


			Button[0].addActionListener(e -> Pos = 0);
			Button[1].addActionListener(e -> Pos = 1);
			Button[2].addActionListener(e -> Pos = 2);
			Button[3].addActionListener(e -> Pos = 3);
			Button[4].addActionListener(e -> Pos = 4);
			Button[5].addActionListener(e -> Pos = 5);
			Button[6].addActionListener(e -> Pos = 6);
			Button[7].addActionListener(e -> Pos = 7);
			Button[8].addActionListener(e -> Pos = 8);


		}
		System.out.println(Pos);
		 
	
		
		
	
		
		//verification cas par cas des paramètres Taille et couleur (=Player iD);
		if(Size == 0 && PlayerId == 1) Small[Pos].setIcon(SmallRed);
		if(Size == 1 && PlayerId == 1) Medium[Pos].setIcon(MediumRed);
		if(Size == 2 && PlayerId == 1) Big[Pos].setIcon(BigRed);
		if(Size == 0 && PlayerId == 2) Small[Pos].setIcon(SmallBlue);
		if(Size == 1 && PlayerId == 2) Medium[Pos].setIcon(MediumBlue);
		if(Size == 2 && PlayerId == 2) Big[Pos].setIcon(BigBlue);
		}

	public int getLastX(){ //retourne la dernière coordonnées x du dernier pion joué
		int Posx = 12;
		if (Pos == 0 ||Pos == 3||Pos == 6) Posx = 1;
		if (Pos == 1 ||Pos == 4||Pos == 7) Posx = 2;
		if (Pos == 2 ||Pos == 5||Pos == 8) Posx = 3;

		return Posx;
	}	
		public int getLastY(){ //retourne la dernière coordonnées y du dernier pion joué
			int Posy = 12;
			if (Pos == 6 ||Pos == 7||Pos == 8) Posy = 1;
			if (Pos == 3 ||Pos == 4||Pos == 5) Posy = 2;
			if (Pos == 0 ||Pos == 1||Pos == 2) Posy = 3;
	
			return Posy;
		}	



	public void clear() {
		for(int i = 0 ; i<9 ; i++) {
			Big[i].setIcon(null);
			Medium[i].setIcon(null);
			Small[i].setIcon(null);
			
		}
	}
	
	
	
}